<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" requirePermission="false" />
  </configSections>
  <log4net debug="true" update="Merge" threshold="ALL">
    <!-- 日志附加介质 -->
    <appender name="DateRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- 是否追加到文件 -->
      <param name="AppendToFile" value="true" />
      <!-- 编码 -->
      <param name="Encoding" value="UTF-8" />
      <!-- ExclusiveLock,MinimalLock,InterProcessLock -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!-- true/false，默认为true。
           为 true 时，RollingStyle 的 Date 值将无效。
           为 true 时，需要在 File 里指定文件名，所有日志都会记录在这个文件里。
      -->
      <param name="StaticLogFileName" value="false" />
      <!-- 日志文件路径 -->
      <param name="File" value="LogFiles\\" />
      <!-- 创建新文件的方式：Date（按照日期）,Size（按照文件大小）,Once（每启动一次创建一个文件）,Composite（按照日期及文件大小，默认） -->
      <param name="RollingStyle" value="Date" />
      <!-- 日志文件名格式（Composite、Date）-->
      <param name="DatePattern" value="yyyyMM\\yyyyMMdd'.log'" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- 输出格式：
               日志事件等级：%level、%p；
               引发日志事件的时间：%date、%d；
               引发日志事件的线程，如果没有线程名就使用线程号：%thread、%t；
               引发日志事件的类全名（警告：会影响性能）：%type、%class、%C；
               引发日志事件的方法名（只有方法名而已。警告：会影响性能）：%method、%M；
               由应用程序提供给日志事件的消息：%message、%m；
               换行符：%newline、%n；
               
               记录日志的日志对象的名称：%logger、%c；
               异常信息：%exception；
               引发日志事件的源文件（警告：会影响性能）：%file、%F；
               引发日志事件的行号（警告：会影响性能）：%line、%L。
               引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号（警告：会影响性能）：%location、%l
               引发日志事件的应用程序域的友好名称：%appdomain、%a
               当前活动用户的名字（Principal.Identity.Name。警告：会影响性能）：%identity
               当前用户的 WindowsIdentity（警告：会影响性能）：%username、%w
               NDC（nested diagnostic context）：%ndc、%x
               MDC：%mdc、%X
               从程序启动到事件发生所经过的毫秒数：%timestamp、%r
               输出事件的特殊属性：%property、%properties、%P
        -->
        <conversionPattern value="%-5level %date [%thread] [%class.%method] %message%newline" />
      </layout>
    </appender>
    <!-- 日志附加介质 -->
    <appender name="SizeRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- 是否追加到文件 -->
      <param name="AppendToFile" value="true" />
      <!-- 编码 -->
      <param name="Encoding" value="UTF-8" />
      <!-- ExclusiveLock,MinimalLock,InterProcessLock -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!-- true/false，默认为true。
           为 true 时，RollingStyle 的 Date 值将无效。
           为 true 时，需要在 File 里指定文件名，所有日志都会记录在这个文件里。
      -->
      <param name="StaticLogFileName" value="false" />
      <!-- 日志文件路径 -->
      <param name="File" value="LogFiles\\" />
      <!-- 创建新文件的方式：Date（按照日期）,Size（按照文件大小）,Once（每启动一次创建一个文件）,Composite（按照日期及文件大小，默认） -->
      <param name="RollingStyle" value="Size" />
      <!-- 日志文件的最大大小（Composite、Size）-->
      <param name="MaximumFileSize" value="20KB" />
      <!-- 最多产生的日志文件数，value="－1"为不限文件数。-->
      <param name="MaxSizeRollBackups" value="5" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- 输出格式：
               日志事件等级：%level、%p；
               引发日志事件的时间：%date、%d；
               引发日志事件的线程，如果没有线程名就使用线程号：%thread、%t；
               引发日志事件的类全名（警告：会影响性能）：%type、%class、%C；
               引发日志事件的方法名（只有方法名而已。警告：会影响性能）：%method、%M；
               由应用程序提供给日志事件的消息：%message、%m；
               换行符：%newline、%n；
               
               记录日志的日志对象的名称：%logger、%c；
               异常信息：%exception；
               引发日志事件的源文件（警告：会影响性能）：%file、%F；
               引发日志事件的行号（警告：会影响性能）：%line、%L。
               引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号（警告：会影响性能）：%location、%l
               引发日志事件的应用程序域的友好名称：%appdomain、%a
               当前活动用户的名字（Principal.Identity.Name。警告：会影响性能）：%identity
               当前用户的 WindowsIdentity（警告：会影响性能）：%username、%w
               NDC（nested diagnostic context）：%ndc、%x
               MDC：%mdc、%X
               从程序启动到事件发生所经过的毫秒数：%timestamp、%r
               输出事件的特殊属性：%property、%properties、%P
        -->
        <conversionPattern value="%-5level %date [%thread] %message%newline" />
      </layout>
    </appender>
    <!-- 日志附加介质 -->
    <appender name="CompositeRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- 是否追加到文件 -->
      <param name="AppendToFile" value="true" />
      <!-- 编码 -->
      <param name="Encoding" value="UTF-8" />
      <!-- ExclusiveLock,MinimalLock,InterProcessLock -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!-- true/false，默认为true。
           为 true 时，RollingStyle 的 Date 值将无效。
           为 true 时，需要在 File 里指定文件名，所有日志都会记录在这个文件里。
      -->
      <param name="StaticLogFileName" value="false" />
      <!-- 日志文件路径 -->
      <param name="File" value="LogFiles\\" />
      <!-- 创建新文件的方式：Date（按照日期）,Size（按照文件大小）,Once（每启动一次创建一个文件）,Composite（按照日期及文件大小，默认） -->
      <param name="RollingStyle" value="Composite" />
      <!-- 日志文件名格式（Composite、Date）-->
      <param name="DatePattern" value="yyyyMM\\yyyyMMdd'.log'" />
      <!-- 日志文件的最大大小（Composite、Size）-->
      <param name="MaximumFileSize" value="20KB" />
      <!-- 最多产生的日志文件数，value="－1"为不限文件数。-->
      <param name="MaxSizeRollBackups" value="5" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- 输出格式：
               日志事件等级：%level、%p；
               引发日志事件的时间：%date、%d；
               引发日志事件的线程，如果没有线程名就使用线程号：%thread、%t；
               引发日志事件的类全名（警告：会影响性能）：%type、%class、%C；
               引发日志事件的方法名（只有方法名而已。警告：会影响性能）：%method、%M；
               由应用程序提供给日志事件的消息：%message、%m；
               换行符：%newline、%n；
               
               记录日志的日志对象的名称：%logger、%c；
               异常信息：%exception；
               引发日志事件的源文件（警告：会影响性能）：%file、%F；
               引发日志事件的行号（警告：会影响性能）：%line、%L。
               引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号（警告：会影响性能）：%location、%l
               引发日志事件的应用程序域的友好名称：%appdomain、%a
               当前活动用户的名字（Principal.Identity.Name。警告：会影响性能）：%identity
               当前用户的 WindowsIdentity（警告：会影响性能）：%username、%w
               NDC（nested diagnostic context）：%ndc、%x
               MDC：%mdc、%X
               从程序启动到事件发生所经过的毫秒数：%timestamp、%r
               输出事件的特殊属性：%property、%properties、%P
        -->
        <conversionPattern value="%-5level %date [%thread] %message%newline" />
      </layout>
    </appender>
    <!-- 日志附加介质 -->
    <appender name="FileAppender" type="log4net.Appender.FileAppender">
      <!-- 是否追加到文件 -->
      <param name="AppendToFile" value="true" />
      <!-- 编码 -->
      <param name="Encoding" value="UTF-8" />
      <!-- ExclusiveLock,MinimalLock,InterProcessLock -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!-- true/false，默认为true。
           为 true 时，RollingStyle 的 Date 值将无效。
           为 true 时，需要在 File 里指定文件名，所有日志都会记录在这个文件里。
      -->
      <param name="StaticLogFileName" value="true" />
      <!-- 日志文件路径 -->
      <param name="File" value="LogFiles\\Static.log" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- 输出格式：
               日志事件等级：%level、%p；
               引发日志事件的时间：%date、%d；
               引发日志事件的线程，如果没有线程名就使用线程号：%thread、%t；
               引发日志事件的类全名（警告：会影响性能）：%type、%class、%C；
               引发日志事件的方法名（只有方法名而已。警告：会影响性能）：%method、%M；
               由应用程序提供给日志事件的消息：%message、%m；
               换行符：%newline、%n；
               
               记录日志的日志对象的名称：%logger、%c；
               异常信息：%exception；
               引发日志事件的源文件（警告：会影响性能）：%file、%F；
               引发日志事件的行号（警告：会影响性能）：%line、%L。
               引发日志事件的方法（包括命名空间和类名），以及所在的源文件和行号（警告：会影响性能）：%location、%l
               引发日志事件的应用程序域的友好名称：%appdomain、%a
               当前活动用户的名字（Principal.Identity.Name。警告：会影响性能）：%identity
               当前用户的 WindowsIdentity（警告：会影响性能）：%username、%w
               NDC（nested diagnostic context）：%ndc、%x
               MDC：%mdc、%X
               从程序启动到事件发生所经过的毫秒数：%timestamp、%r
               输出事件的特殊属性：%property、%properties、%P
        -->
        <conversionPattern value="%-5level %date [%thread] %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="ALL" />
      <appender-ref ref="DateRollingFileAppender" />
    </root>
    <!-- additivity：可选，取值是 true 或 false，默认值是 true。设置为 false 时将阻止父 logger 中的 appender。 -->
    <logger name="StaticLogger" additivity="false">
      <level value="ALL" />
      <appender-ref ref="FileAppender" />
    </logger>
  </log4net>
</configuration>